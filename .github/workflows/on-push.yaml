name: build
on:
  workflow_dispatch:
  push:

jobs:
  build-and-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Golang
        uses: actions/setup-go@v2
      - name: Cache Pip
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ matrix.os }}-python${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install Package Dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt
          python -c "import pytest; print(pytest.__file__)"
          pip show isort
      - name: Get JuiceFS Version
        id: jfs-version
        run: echo "::set-output name=JUICEFS_VERSION::$(make -s print_libjfs_version)"
      - name: Cache libjfs
        id: libjfs-cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Golang/libjfs
          key: ${{ matrix.os }}-golang-libjfs${{ steps.jfs-version.outputs.JUICEFS_VERSION }}
      - name: Run build-libjfs_linux
        if: ${{steps.libjfs-cache.outputs.cache-hit != 'true' && matrix.os != 'windows-latest'}}
        run: |
          make build_libjfs_linux
          mkdir -p /opt/hostedtoolcache/Golang/libjfs
          mv juicefs/lib/juicefs /opt/hostedtoolcache/Golang/libjfs/juicefs
          mv juicefs/lib/libjfs.so /opt/hostedtoolcache/Golang/libjfs/libjfs.so
      - name: Run build-libjfs_windows
        if: ${{steps.libjfs-cache.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'}}
        run: |
          make build_libjfs_win
          mkdir -p /opt/hostedtoolcache/Golang/libjfs
          mv juicefs/lib/juicefs.exe /opt/hostedtoolcache/Golang/libjfs/juicefs.exe
          mv juicefs/lib/libjfs.dll /opt/hostedtoolcache/Golang/libjfs/libjfs.dll
      - name: Link libjfs linux
        if: matrix.os != 'windows-latest'
        run: |
          ln -s /opt/hostedtoolcache/Golang/libjfs/juicefs juicefs/lib/juicefs
          ln -s /opt/hostedtoolcache/Golang/libjfs/libjfs.so juicefs/lib/libjfs.so
      - name: Link libjfs windows
        if: matrix.os == 'windows-latest'
        run: |
          ln -s /opt/hostedtoolcache/Golang/libjfs/juicefs juicefs/lib/juicefs.exe
          ln -s /opt/hostedtoolcache/Golang/libjfs/libjfs.so juicefs/lib/libjfs.dll
      - name: Run style-check
        if: ${{ matrix.python-version == '3.6' && matrix.os != 'windows-latest' }}
        run: |
          make style_check
      - name: Run static-check
        if: ${{ matrix.python-version == '3.6' && matrix.os != 'windows-latest' }}
        run: |
          make static_check
      - name: Run unit-test
        run: |
          make test
